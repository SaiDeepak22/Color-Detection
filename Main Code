import numpy as np 
import cv2 
  
  
# Capturing video through webcam 
vcap = cv2.VideoCapture(0) 
vcap.set(3,1280)
vcap.set(4,7200)
  
# Start a while loop 
while(vcap.isOpened()): 
      
    # Reading the video from the 
    # webcam in image frames 
    ret, image = vcap.read() 
  
    # Convert the imageFrame in  
    # BGR(RGB color space) to  
    # HSV(hue-saturation-value) 
    # color space 
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV) 
  
    # Set range for yellow color and  
    # define mask 
    yellow_lower = np.array([20, 100, 100], np.uint8) 
    yellow_upper = np.array([30, 255, 255], np.uint8)
    yellow_mask = cv2.inRange(hsv, yellow_lower, yellow_upper)
  
  
    
      
    # Morphological Transform, Dilation 
    # for each color and bitwise_and operator 
    # between imageFrame and mask determines 
    # to detect only that particular color 
    kernal = np.ones((5, 5), "uint8") 
      
    # For yellow color 
    yellow_mask = cv2.dilate(yellow_mask, kernal) 
    yellow_red = cv2.bitwise_and(image, image, mask = yellow_mask) 
      
    
   
    # Creating contour to track yellow color 
    contours, hierarchy = cv2.findContours(yellow_mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE) 
      
    for pic, cnt in enumerate(contours): 
        area = cv2.contourArea(cnt) 
        if(area > 200): 
            x, y, w, h = cv2.boundingRect(cnt) 
            image = cv2.rectangle(image, (x, y),  (x + w, y + h), (30, 255, 255), 2) 
              
            cv2.putText(image, "Yellow Colour", (x, y), cv2.FONT_ITALIC, 1.0, (20,100,100))     

    # Program Termination 
    cv2.imshow("Color Detection", image) 
    if cv2.waitKey(10) & 0xFF == ord('q'): 
        vcap.release() 
        cv2.destroyAllWindows() 
        break
